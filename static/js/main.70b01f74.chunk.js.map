{"version":3,"sources":["assets/Mia_logo.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b01f74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mia_logo.0cfbc72b.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n:not(:last-child){\nmargin-bottom:50px\n}\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">⏰</span>\n    </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.span`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                            : require(\"../assets/Mia_logo.png\")\n                    }\n\n                />\n                <Rating><span role=\"img\" aria-label=\"rating\">\n                    🌟\n                    </span>{\" \"}\n                    {rating}/10\n                    </Rating>\n            </ImageContainer>\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n    <>\n        <Helmet>\n            <title>Movies | NELFLIX</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n                <Container>\n                    <Helmet>\n                        <title>Movies | NELFLIX</title>\n                    </Helmet>\n                    {nowPlaying && nowPlaying.length > 0 && (\n                        <Section title=\"Now Playing\">\n                            {nowPlaying.map(movie => (\n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.original_title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {upcoming && upcoming.length > 0 && (\n                        <Section title=\"Upcoming Movies\">\n                            {upcoming.map(movie => (\n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.original_title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {popular && popular.length > 0 && (\n                        <Section title=\"Popular Movies\">\n                            {popular.map(movie => (\n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.original_title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {error && <Message color=\"#e74c3c\" text={error} />}\n                </Container>\n            )}\n    </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"186996e07a7fc2a8c3e3f158d59b185e\",\n        language: \"en-US\"\n    }\n});\n\nexport const movieApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};","import HomeContainer from './HomeContainer';\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { movieApi } from 'api';\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const { data: { results: nowPlaying } } = await movieApi.nowPlaying();\n            const { data: { results: upcoming } } = await movieApi.upcoming();\n            const { data: { results: popular } } = await movieApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n\n        } catch {\n            this.setState({\n                error: \"can't find movies information\"\n            });\n\n        } finally {\n            this.setState({\n                loading: false\n            });\n\n        }\n    }\n\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\npadding: 20px;\n`;\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>TV Shows | NELFLIX</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n                <Container>\n                    {topRated && topRated.length > 0 && (\n                        <Section title=\"Top Rated Shows\">\n                            {topRated.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average}\n                                    year={show.first_air_date.substring(0, 4)}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {popular && popular.length > 0 && (\n                        <Section title=\"Popular Shows\">\n                            {popular.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average}\n                                    year={show.first_air_date.substring(0, 4)}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {airingToday && airingToday.length > 0 && (\n                        <Section title=\"Airing Today\">\n                            {airingToday.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average}\n                                    year={show.first_air_date.substring(0, 4)}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {error && <Message color=\"#e74c3c\" text={error} />}\n                </Container>\n            )}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\"\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    }\n\n    async componentDidMount() {\n        try {\n            const { data: { results: topRated } } = await tvApi.topRated();\n            const { data: { results: popular } } = await tvApi.popular();\n            const { data: { results: airingToday } } = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n\n        } catch (error) {\n            this.setState({\n                error: \"can not tv\"\n            })\n\n        } finally {\n            this.setState({ loading: false })\n\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\npadding: 0px 20px;\n`;\n\nconst Form = styled.form`\nmargin-bottom:50px;\nwidth:100%;\n`;\n\nconst Input = styled.input`\nall:unset;\nfont-size:28px;\nwidth:100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm }) => (\n    <Container>\n        <Helmet>\n            <title>Search | NELFLIX</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder=\"검색할 영화나 티비 쇼를 검색하세요\"\n                value={searchTerm}\n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? (<Loader />) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(movie => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true} />\n                        ))}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {tvResults.map(show => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date.substring(0, 4)}\n                                isMovie={true} />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n                {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n                    <Message text=\"Nothing found\" color=\"#95a5a6\" />\n                )}\n            </>\n        )}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { movieApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = event => {\n        const {\n            target: { value }\n        } = event;\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { data: { results: movieResults } } = await movieApi.search(searchTerm);\n            const { data: { results: tvResults } } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n\n        } catch (error) {\n            this.setState({ error: \"can not find results\" })\n\n        } finally {\n            this.setState({ loading: false })\n\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                loading={loading}\n                error={error}\n                searchTerm={searchTerm}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm} />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <Title>Loading | Nelflix</Title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n      <Container>\n        <Helmet>\n          <Title>Loading | Nelflix</Title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/Mia_logo.png\")\n            }\n          />\n          <Data>\n            <Title>\n              {result.original_title ? result.original_title : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n          </Data>\n        </Content>\n      </Container>\n    );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter","import DetailContainer from './DetailContainer';\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: { pathname } } = props;\n\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n\n    async componentDidMount() {\n\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({ data: result } = await movieApi.movieDetail(parsedId))\n\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId))\n            }\n\n        } catch {\n            this.setState({ error: \"Can't find anything\" })\n\n        } finally {\n            this.setState({ loading: false, result })\n\n        }\n    }\n\n    render() {\n\n        const { result, error, loading } = this.state;\n        console.log(result);\n        return <DetailPresenter\n            result={result}\n            error={error}\n            loading={loading} />\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\ndisplay: flex;\n`;\n\nconst Item = styled.li`\nwidth: 80px;\nheight: 50px;\ntext-align: center;\nborder-bottom:3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\ntransition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\nheight:50px;\ndisplay:flex;\nalign-items:center;\njustify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail'\nimport Header from 'Components/Header';\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home}></Route>\n                <Route path=\"/tv\" exact component={TV}></Route>\n                <Route path=\"/search\" exact component={Search}></Route>\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration:none;\n    color:inherit;\n}\n*{\n    box-sizing:border-box;\n}\nbody{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size:12px;\n    background-color:rgba(20, 20, 20, 1);\n    color:white;\n    padding-top:50px;\n}\n`;\nexport default globalStyles\n","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}